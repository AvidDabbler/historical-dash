[{"C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\index.js":"1","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\reportWebVitals.js":"2","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\App.js":"3","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\component\\AllStops.js":"4","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\component\\SurveyRecord.js":"5","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\component\\StopHistory.js":"6","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\component\\Dashboard.js":"7","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\hooks\\getRecords.js":"8","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\component\\Search.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":1694,"mtime":1610668186092,"results":"13","hashOfConfig":"11"},{"size":1289,"mtime":1610667780443,"results":"14","hashOfConfig":"11"},{"size":231,"mtime":1610654207129,"results":"15","hashOfConfig":"11"},{"size":228,"mtime":1610654206123,"results":"16","hashOfConfig":"11"},{"size":1256,"mtime":1610665422198,"results":"17","hashOfConfig":"11"},{"size":2392,"mtime":1610660804473,"results":"18","hashOfConfig":"11"},{"size":863,"mtime":1610668209903,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"xcvp06",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\index.js",[],["41","42"],"C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\reportWebVitals.js",[],"C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\App.js",["43","44"],"C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\component\\AllStops.js",["45","46","47","48","49"],"import React, {useState, useEffect} from 'react'\r\n\r\nfunction Stop(props) {\r\n    const onClick = () => {\r\n\r\n    }\r\n\r\n    const {stopid, stopname, routes} = props;\r\n    return (\r\n        <div key={stopid}>\r\n            <button>\r\n                {/* <img src={}></img> */}\r\n                <h3>StopID: {stopid} StopName: {stopname}</h3>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction AllStops(props) {\r\n    const {stops} = props;\r\n\r\n    useEffect(async() => {\r\n        console.log(\"AllStops\", await stops)\r\n      }, [stops])\r\n    return (\r\n        <div className='panel'>\r\n            <h2 className=\"text-lg my-4 underline\">Matching Stops</h2>\r\n            <div>\r\n                {stops.map(stop=>{\r\n                    return (\r\n                        <button value={stop.attributes.stopid} className='text-left w-5/6 mb-6 pb-6 pt-2 px-2 border-b-2' onClick={e=>props.setStopSelection(e.target.value)}>\r\n                            {/* <img src={}></img> */}\r\n                            <h3 className=''><b>StopID:</b> {stop.attributes.stopid}</h3>\r\n                            <h3 className=''><b>StopName:</b> {stop.attributes.stopname}</h3>\r\n                        </button>\r\n                )})}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllStops\r\n","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\component\\SurveyRecord.js",[],"C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\component\\StopHistory.js",[],"C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\component\\Dashboard.js",["50"],"import React, {useState, useEffect} from 'react'\r\nimport AllStops from './AllStops'\r\nimport StopHistory from './StopHistory'\r\nimport SurveyRecord from './SurveyRecord'\r\nimport Search from './Search'\r\nimport getRecords from '../hooks/getRecords';\r\n\r\nexport default function Dashboard(props) {\r\n    const [search, setSearch] = useState('');\r\n    const [stopSelection, setStopSelection] = useState('');\r\n    const [globalId, setGlobalId] = useState('');\r\n    const [stops, setStops] = useState([]);\r\n    \r\n    const {token} = props;\r\n    useEffect(async () => {\r\n        console.log(search)\r\n        if(search.length > 3){\r\n            setStops(await getRecords(token, search))\r\n        }\r\n        console.log('search: ', search)\r\n      }, [token, search])\r\n      \r\n    return (\r\n        <div className='' >\r\n            <div className='w-100 flex search'>\r\n                <Search setSearch={setSearch} />\r\n            </div>\r\n            <div className='flex dashboard'>\r\n                <AllStops token={token} setStopSelection={setStopSelection} stops={stops} />\r\n                <StopHistory stopSelection={stopSelection} setGlobalId={setGlobalId} />\r\n                <SurveyRecord globalId={globalId} />\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\hooks\\getRecords.js",[],"C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\component\\Search.js",["51"],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":6,"column":8,"nodeType":"58","messageId":"59","endLine":6,"endColumn":17},{"ruleId":"60","severity":1,"message":"61","line":29,"column":221,"nodeType":"62","messageId":"63","endLine":29,"endColumn":222},{"ruleId":"56","severity":1,"message":"64","line":1,"column":16,"nodeType":"58","messageId":"59","endLine":1,"endColumn":24},{"ruleId":"56","severity":1,"message":"65","line":3,"column":10,"nodeType":"58","messageId":"59","endLine":3,"endColumn":14},{"ruleId":"56","severity":1,"message":"66","line":4,"column":11,"nodeType":"58","messageId":"59","endLine":4,"endColumn":18},{"ruleId":"56","severity":1,"message":"67","line":8,"column":30,"nodeType":"58","messageId":"59","endLine":8,"endColumn":36},{"ruleId":"68","severity":1,"message":"69","line":22,"column":15,"nodeType":"70","endLine":24,"endColumn":8},{"ruleId":"68","severity":1,"message":"69","line":15,"column":15,"nodeType":"70","endLine":21,"endColumn":8},{"ruleId":"71","severity":1,"message":"72","line":17,"column":42,"nodeType":"73","endLine":17,"endColumn":66},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'MetroLogo' is defined but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useState' is defined but never used.","'Stop' is defined but never used.","'onClick' is assigned a value but never used.","'routes' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]