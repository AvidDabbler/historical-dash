[{"C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\index.js":"1","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\reportWebVitals.js":"2","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\App.js":"3","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\component\\AllStops.js":"4","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\component\\SurveyRecord.js":"5","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\component\\StopHistory.js":"6","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\component\\Dashboard.js":"7","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\hooks\\getRecords.js":"8","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\component\\Search.js":"9","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\hooks\\filterRecords.js":"10","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\component\\formatDate.js":"11","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\component\\TopBar.js":"12","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\component\\PopupSurvey.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":583,"mtime":1614963566652,"results":"17","hashOfConfig":"15"},{"size":2014,"mtime":1614202170053,"results":"18","hashOfConfig":"15"},{"size":1341,"mtime":1614277097216,"results":"19","hashOfConfig":"15"},{"size":1743,"mtime":1614277056449,"results":"20","hashOfConfig":"15"},{"size":2174,"mtime":1614963902812,"results":"21","hashOfConfig":"15"},{"size":2195,"mtime":1614205150250,"results":"22","hashOfConfig":"15"},{"size":762,"mtime":1614205824642,"results":"23","hashOfConfig":"15"},{"size":1011,"mtime":1612375069080,"results":"24","hashOfConfig":"15"},{"size":430,"mtime":1614277067706,"results":"25","hashOfConfig":"15"},{"size":1875,"mtime":1614963519535,"results":"26","hashOfConfig":"15"},{"size":1682,"mtime":1614977508499,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"xcvp06",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"30"},"C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\index.js",[],["64","65"],"C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\reportWebVitals.js",[],"C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\App.js",["66"],"import './App.css';\nimport './tailwind.min.css'\nimport React, {useState, useEffect} from 'react';\nimport Dashboard from './component/Dashboard';\nimport TopBar from './component/TopBar';\n\nfunction App() {\n  const [signedIn, setSignedIn] = useState(false);\n  const [user, setUser] = useState('');\n  const [token, setToken] = useState('');\n  \n\n  return (\n    <div className=\"App\">\n        <TopBar signedIn={signedIn} user={user}  setUser={setUser} token={token} setSignedIn={setSignedIn} setToken={setToken} />\n        <Dashboard token={token} />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\component\\AllStops.js",["67","68"],"import React, {useState, useEffect} from 'react'\r\nimport {LocationOn, LocationOff} from '@material-ui/icons';\r\n\r\nfunction AllStops(props) {\r\n    const {stops, setStopSelection, setSurveyDetails} = props;\r\n\r\n    async function onClick(stopid) {\r\n        setStopSelection(stopid);\r\n        setSurveyDetails('')\r\n    } \r\n\r\n    useEffect(async() => {\r\n        console.log(\"AllStops\", await stops)\r\n      }, [stops])\r\n    return (\r\n        <div className='panel'>\r\n            <h2 className=\"text-lg my-4 underline\">Matching Stops</h2>\r\n            <div className='m-0 w-100'>\r\n                {stops ?\r\n                stops.map(stop=>{\r\n                    return (\r\n                        <li key={stop.attributes.stopid} className='item flex flex-column border-b-2 py-6 m-0 w-100' onClick={e=>onClick(stop.attributes.stopid)}>\r\n                            {stop.attributes.routes ? <LocationOn className=\" align-middle\" color='primary'/> : <LocationOff color='secondary' className=\" align-middle\" />}\r\n                            \r\n                            <li className='flex flex-column mx-auto text-left w-5/6 px-2'>\r\n                                <ul>\r\n                                    <li className='flex flex-row '>\r\n                                        <b>StopID: </b> {' ' + stop.attributes.stopid} \r\n                                    </li>\r\n                                    <li className='flex flex-row '>\r\n                                        <b>StopName: </b> {stop.attributes.stopname} \r\n                                    </li>\r\n                                    <li className='flex flex-row '>\r\n                                        <b>Status: </b> {stop.attributes.routes ? 'Active' : 'Ghoststop'} \r\n                                    </li>\r\n                                </ul>\r\n                            </li>\r\n                        </li>\r\n                )}) :\r\n            ''\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllStops\r\n","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\component\\SurveyRecord.js",["69"],"import React, { useEffect } from 'react'\r\nimport formatDate from './formatDate'\r\n\r\nexport default function SurveyRecord({surveyDetails, setShowSurvey, setSurveyURL, surveyURL, token}) {\r\n\r\n    const surveyID = '5112a8568fc34207b4a1b6b8c3777633'\r\n    const portalURL = 'https://maps.metrostlouis.org/arcgis'\r\n\r\n    const revealSurvey = (e, globalid) => {\r\n        console.log(globalid)\r\n        setSurveyURL(`https://survey123.arcgis.com/share/${surveyID}?portalUrl=${portalURL}&mode=edit&globalId=${globalid}&token=${token}`)\r\n        setShowSurvey(true)\r\n    }\r\n\r\n    return (\r\n        <div className='panel'>\r\n            <h2 className=\"text-lg my-4 underline\">Survey Record</h2>\r\n            {!surveyDetails ? '' :\r\n            <div>\r\n                <h3><b>Stop ID: </b>{surveyDetails.attributes.stop_id}</h3>\r\n                <h3><b>Stop Name: </b>{surveyDetails.attributes.stop_name}</h3>\r\n                <h3><b>Bench: </b>{surveyDetails.attributes.bench}</h3>\r\n                <h3><b>Shelter: </b>{surveyDetails.attributes.shelter}</h3>\r\n                <h3><b>Last Edit Date: </b>{formatDate(parseInt(1609185748773))}</h3>\r\n                <button className='border-2 p-5 ml-3 mt-3' onClick={e=>revealSurvey(e, surveyDetails.attributes.globalid)}>Full Survey</button>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\component\\StopHistory.js",["70","71","72"],"import React, {useState, useEffect} from 'react'\r\nimport formatDate from './formatDate';\r\n\r\nexport default function StopHistory(props){\r\n    const {stopIDHistory, setSurveyDetails} = props;\r\n\r\n    const onClick = (stop) => {\r\n        console.log(stop)\r\n        setSurveyDetails(stop)\r\n    }\r\n\r\n    useEffect(async() => {\r\n        console.log(\"StopHistoryID\", await stopIDHistory)\r\n      }, [stopIDHistory])\r\n\r\n    return (\r\n        <div className='panel'>\r\n            <h2 className=\"text-lg my-4 underline\">Stop History</h2>\r\n            {stopIDHistory ?\r\n            stopIDHistory.map(stop=>{\r\n                    return (\r\n                        <a key={stop.attributes.stop_id} className='item flex flex-column border-b-2 py-6 m-0 w-100' onClick={e=>onClick(stop)}>\r\n                            \r\n                            <li className='flex flex-column mx-auto text-left w-5/6 px-2'>\r\n                                <ul>\r\n                                    <li className='flex flex-row '>\r\n                                        <b>StopID: </b> {' ' + stop.attributes.stop_id} \r\n                                    </li>\r\n                                    <li className='flex flex-row '>\r\n                                        <b>StopName: </b> {stop.attributes.stop_name} \r\n                                    </li>\r\n                                    <li className='flex flex-row '>\r\n                                        <b>Last Edit: </b> {`${formatDate(stop.attributes.last_edited_date)}`} \r\n                                    </li>\r\n                                </ul>\r\n                            </li>\r\n                        </a>\r\n                )}) :\r\n            ''\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\component\\Dashboard.js",["73","74","75","76","77"],"import React, {useState, useEffect} from 'react'\r\nimport AllStops from './AllStops'\r\nimport StopHistory from './StopHistory'\r\nimport SurveyRecord from './SurveyRecord'\r\nimport PopupSurvey from './PopupSurvey'\r\nimport Search from './Search'\r\nimport getRecords from '../hooks/getRecords';\r\nimport filterRecords from '../hooks/filterRecords'\r\n\r\nexport default function Dashboard(props) {\r\n    const [search, setSearch] = useState('');\r\n    const [stopSelection, setStopSelection] = useState('');\r\n    const [stopIDHistory, setStopIDHistory] = useState('');\r\n    const [surveyDetails, setSurveyDetails] = useState('');\r\n    const [stops, setStops] = useState([]);\r\n    const [showSurvey, setShowSurvey] = useState(false);\r\n    const [surveyURL, setSurveyURL] = useState('');\r\n    \r\n    const {token} = props;\r\n\r\n    // page load\r\n    useEffect(async () => {\r\n        setStopIDHistory([])\r\n        setStopSelection('')\r\n        setSurveyDetails('')\r\n        setStops([])\r\n    }, [])\r\n    \r\n    // updated search\r\n    useEffect(async () => {\r\n        search.length > 2? \r\n            setStops(await getRecords(token, search)) : \r\n            setStops([])\r\n    }, [search])\r\n\r\n    // click on AllStops\r\n    useEffect(async () => {\r\n        setStopIDHistory(await filterRecords(token, stopSelection) )\r\n\r\n    }, [stopSelection])\r\n\r\n\r\n    \r\n    return (\r\n        <div className='' >\r\n            <div className='w-100 flex search'>\r\n                <Search setSearch={setSearch} setStopIDHistory={setStopIDHistory} />\r\n            </div>\r\n            <div className='flex dashboard'>\r\n                <AllStops token={token} setStopSelection={setStopSelection} setSurveyDetails={setSurveyDetails} stops={stops} />\r\n                <StopHistory stopIDHistory={stopIDHistory} setSurveyDetails={setSurveyDetails} />\r\n                <SurveyRecord surveyDetails={surveyDetails} setShowSurvey={setShowSurvey} setSurveyURL={setSurveyURL} surveyURL={surveyURL} token={token}/>\r\n                {showSurvey ? \r\n                    <PopupSurvey surveyURL={surveyURL} setShowSurvey={setShowSurvey} /> :\r\n                    ''\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\hooks\\getRecords.js",[],"C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\component\\Search.js",["78"],"import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nexport function Search({setSearch, setStopIDHistory}) {\r\n    \r\n    function textInput(e) {\r\n        e.preventDefault()\r\n        \r\n        setStopIDHistory('')\r\n        setSearch(e.target.value)\r\n    }\r\n\r\n    return (\r\n            <div id='init-search' className=\"w-70\" style={{marginLeft:'auto', marginRight:'auto'}}>\r\n            <form id=\"form-search\" className=\"px-40 black-80\">\r\n                <div className=\"measure\" className='mx-auto pt-3'>\r\n                    <TextField onChange={e=>textInput(e)} id=\"standard-search\" label=\"StopID Search\" type=\"number\" />\r\n                </div>       \r\n            </form>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\hooks\\filterRecords.js",[],"C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\component\\formatDate.js",[],["79","80"],"C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\component\\TopBar.js",["81","82","83"],"import MetroLogo from '../assets/metrologo.png'\r\nimport loginIcon from '../assets/login.svg';\r\nimport React, {useState, useEffect} from 'react';\r\n\r\n\r\nexport default function TopBar({signedIn, setUser, user, token, setToken, setSignedIn}) {\r\n\r\n    const load = () => {\r\n        // login restriction logic\r\n        const fullHash = document.location.hash.split('#')[1];\r\n    \r\n        if (fullHash) {\r\n          const params = JSON.parse('{\"' + decodeURI(fullHash).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}');\r\n          setSignedIn(true);\r\n          setUser(params.username.replace('%40','@'));\r\n          return params.access_token\r\n        } else {\r\n          return '';\r\n        }\r\n      };\r\n      \r\n      const getToken = () => {\r\n        var redirectUri = `${process.env.REACT_APP_REDIRECT_URI}`;\r\n        var clientID = `${process.env.REACT_APP_ID}`;\r\n        window.location.href = 'https://maps.metrostlouis.org/arcgis/sharing/rest/oauth2/authorize?client_id=' + clientID + '&response_type=token&expiration=1440&redirect_uri=' + window.encodeURIComponent(redirectUri) + 'oauth-window' +'height=400,width=600,menubar=no,location=yes,resizable=yes,scrollbars=yes,status=yes';\r\n      };\r\n    \r\n      useEffect(() => {\r\n        setToken(load());\r\n      }, [token])\r\n\r\n    return (\r\n        <div id=\"top-bar\" class=\"w-100 flex my-4 p-4 justify-between h-16 align-middle\">\r\n            <h3>{signedIn ? user : 'Please Sign in' }</h3>\r\n\r\n            <div className='flex flex-row '>\r\n                <img src={MetroLogo} alt='Metro Saint Louis Logo'></img>\r\n                <h2 className='text-2xl text-bold'>Metro Saint Louis</h2>\r\n            </div>\r\n\r\n            <button id=\"sign-in\" class=\"flex w-20\" onClick={getToken}>\r\n                <img id=\"sign-in-icon\" src={loginIcon} alt='signin'  />\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\wkjenkins\\dev\\BusStopManager\\historical-dash\\src\\component\\PopupSurvey.js",["84"],"import React, {useState} from 'react'\r\n\r\nfunction CloseSurvey({setShowCloseAlert, setShowSurvey, setSurveyURL}) {\r\n\r\n    const clickYes = (e) => {\r\n        e.preventDefault()\r\n        setShowCloseAlert(false)\r\n        setShowSurvey(false)\r\n    }\r\n    const clickNo = (e) => {\r\n        e.preventDefault()\r\n        setShowCloseAlert(false)\r\n    }\r\n\r\n    return (\r\n        <div className='bg-white w-1/2 h-1/2 p-4 rounded-md border-2 absolute boarder-black' style={{top: '50%', left: '50%', transform: 'translateX(-50%)'}}>   \r\n            <h2>Would you like to close the survey? All unsaved data will be lost</h2>\r\n            <button className='border-2 p-5 ml-3 mt-3 boarder-black' onClick={e=>clickYes(e)}>Yes</button>\r\n            <button className='border-2 p-5 ml-3 mt-3 boarder-black' onClick={e=>clickNo(e)}>No</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default function PopupSurvey({surveyURL, setShowSurvey, setSurveyURL}) {\r\n    const [showCloseAlert, setShowCloseAlert] = useState(false);\r\n\r\n    return (\r\n        <div id='popup-survey' className='bg-white w-3/4 h-2/3 absolute bg-white w-1/2 h-full p-4 rounded-md border-2 absolute' style={{top: '5%', right: '15%', height:'85vh'}}>\r\n            <iframe className='w-full h-full' src={surveyURL}></iframe>\r\n            <div id='close-iframe'>\r\n                <button className='border-2 p-5 ml-3 mt-8 boarder-black' onClick={e=>setShowCloseAlert(true)}>Close</button>\r\n            </div>\r\n            {showCloseAlert ? \r\n                <CloseSurvey \r\n                    setShowSurvey={setShowSurvey} \r\n                    setShowCloseAlert={setShowCloseAlert} /> :\r\n                '' }\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":3,"column":26,"nodeType":"91","messageId":"92","endLine":3,"endColumn":35},{"ruleId":"89","severity":1,"message":"93","line":1,"column":16,"nodeType":"91","messageId":"92","endLine":1,"endColumn":24},{"ruleId":"94","severity":1,"message":"95","line":12,"column":15,"nodeType":"96","endLine":14,"endColumn":8},{"ruleId":"89","severity":1,"message":"90","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":26},{"ruleId":"89","severity":1,"message":"93","line":1,"column":16,"nodeType":"91","messageId":"92","endLine":1,"endColumn":24},{"ruleId":"94","severity":1,"message":"95","line":12,"column":15,"nodeType":"96","endLine":14,"endColumn":8},{"ruleId":"97","severity":1,"message":"98","line":22,"column":25,"nodeType":"99","endLine":22,"endColumn":145},{"ruleId":"94","severity":1,"message":"95","line":22,"column":15,"nodeType":"96","endLine":27,"endColumn":6},{"ruleId":"94","severity":1,"message":"95","line":30,"column":15,"nodeType":"96","endLine":34,"endColumn":6},{"ruleId":"94","severity":1,"message":"100","line":34,"column":8,"nodeType":"101","endLine":34,"endColumn":16,"suggestions":"102"},{"ruleId":"94","severity":1,"message":"95","line":37,"column":15,"nodeType":"96","endLine":40,"endColumn":6},{"ruleId":"94","severity":1,"message":"100","line":40,"column":8,"nodeType":"101","endLine":40,"endColumn":23,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":17,"column":42,"nodeType":"106","endLine":17,"endColumn":66},{"ruleId":"85","replacedBy":"107"},{"ruleId":"87","replacedBy":"108"},{"ruleId":"89","severity":1,"message":"93","line":3,"column":16,"nodeType":"91","messageId":"92","endLine":3,"endColumn":24},{"ruleId":"109","severity":1,"message":"110","line":25,"column":236,"nodeType":"111","messageId":"112","endLine":25,"endColumn":237},{"ruleId":"94","severity":1,"message":"113","line":30,"column":10,"nodeType":"101","endLine":30,"endColumn":17,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":30,"column":13,"nodeType":"99","endLine":30,"endColumn":63},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["119"],["120"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["117"],["118"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has missing dependencies: 'load' and 'setToken'. Either include them or remove the dependency array. If 'setToken' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["121"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [search, token]",{"range":"128","text":"129"},"Update the dependencies array to be: [stopSelection, token]",{"range":"130","text":"131"},"Update the dependencies array to be: [load, setToken, token]",{"range":"132","text":"133"},[1157,1165],"[search, token]",[1304,1319],"[stopSelection, token]",[1286,1293],"[load, setToken, token]"]